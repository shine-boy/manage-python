    var CryptoJS = require("crypto-js");
    var t=new Date()
    var res=""+t.getFullYear()
    if(t.getMonth()<10){
      res+="0"+t.getMonth()
    }
    else{
      res+=t.getMonth()
    }
    if(t.getDay()<10){
      res+="0"+t.getDay()
    }
    else{
      res+=t.getDay()
    }

    var vdwdae325w_64we = "2203"+res;

			var pa7abae98165fa779 = [0x788539bd, 0x21e73ded, 0x587136f, 0x1e43ad4b, 0x89178fd4, 0xa4c20cf6, 0x9d871edb, 0xf75977ff, 0xc0ef21d6, 0x8dbe90ef, 0x90c5b713, 0xdf16b28f, 0x73d29f80, 0x5287fb78, 0xa3c94b3d, 0x178389fb, 0x3864c404, 0x1ff7332c, 0x7134e746, 0x325a022a, 0x1c21cdd2, 0x808e17d1, 0x45f7fd19, 0x1bc16b8c, 0x45851553, 0x36ad3d02, 0x198a9fad, 0x16df9aee, 0x37f65576, 0x5bab256, 0x4b241027, 0xf4740193, 0x42ef49fc, 0xfadc10e2, 0xbe4affd7, 0xf797995c, 0x9785bdcc, 0x10ea8ff1, 0xff4faacd, 0xf9bac302, 0xdcb8207f, 0x9c1f5b4, 0x483284e6, 0xc1d23112, 0x70924187, 0x6e78f321, 0x59f13591, 0xc3ce87c9, 0x1416a756, 0x2f1cc75b, 0xa4b9f8e9, 0x63ef53f6, 0x893a79fe, 0xb853dac8, 0xdbb0924c, 0xb0dee090, 0xd77790af, 0x8acd5f9f, 0x1ada6978, 0x69d9eb50, 0x4f79710e, 0xf2a2e85f, 0x59506c3c, 0x3dc99afc, 0x9ef8ff36, 0xe19b859, 0x67d8ab05, 0xbc9931f1, 0x9edba7f, 0xce6b3c4d, 0x672a1af0, 0x39b39144, 0x7ede1aa0, 0x91947c4d, 0x5326740c, 0x3995691a, 0x5f12824, 0x55e13ecb, 0x73fa27fe, 0x7ffdb220, 0xa8e5ff63, 0x4aa8bba5, 0x2841ab3e, 0x5daef3c9, 0xbbe808da, 0x4db602d1, 0xeaa9969a, 0xa509aad6, 0x7498d405, 0xfe1f96a0, 0x66a2f789, 0x89ef02d5, 0xc128fcdb, 0x35fee091, 0x202cea1d, 0xb6c45cf1, 0x6f350817, 0xcb924393, 0x633ec29d, 0x307761cd, 0x93ca0e86, 0xa6d4ba82, 0xd164e8e8, 0x8f5d02c4, 0x9960856e, 0xefd2fd97, 0x4bb39985, 0xf783fd5d, 0x4b8a94b7, 0xc4df1024, 0xdf5df6c5, 0xe298142d, 0xc229eca5, 0x9cab0444, 0x54de3dc8, 0xd1023f9a, 0xfe4de551, 0x7cb75eed, 0xd04e3365, 0x505b922f, 0x3e02e845, 0xef864df1, 0xfbb56756, 0x2ec154bb, 0x3bef0b05, 0x91e01350, 0x34560c78, 0x4fa0dcd9, 0xcffe4e3b, 0x1c9ceff0, 0x2443563, 0xcd0b83a3, 0xf923a41e, 0x770e237b, 0xacbd2f84, 0x1a6b1337, 0xe7339e1, 0xc1a46823, 0xa99d7938, 0x6df77123, 0xd90c143f, 0x15910353, 0x5b5351ae, 0xd1e76e03, 0xd0b5c221, 0x43f303a8, 0xcf56f145, 0xd044ab24, 0x2b1b0a3b, 0xbf748456, 0x40a7f889, 0xe21700a3, 0x8965cf77, 0x25cf4f0b, 0x93ebc8c5, 0xcfb5f143, 0xd82b2e5a, 0xc3b85fd7, 0x2bfb938a, 0x45189931, 0x60b26790, 0x21da04c8, 0xe54c89d7, 0xcc37c905, 0xe8ce6fa2, 0x5f7ae369, 0x2e3cbe7c, 0xd46d2ba8, 0x31733fb6, 0xaa3d91e1, 0x63448b80, 0xfaa2c74d, 0xa9506133, 0xcd4664ce, 0x8440f279, 0x6cbe6a14, 0x5ba25530, 0x57deb2c3, 0xfe68d11f, 0x327d5b80, 0x5d8c1ccf, 0x64036efa, 0x6edb18db, 0x4be01a9e, 0x9f7d95af, 0xbe8b6bb7, 0x9958fdc4, 0x7a234c99, 0x80ce0a6e, 0x6e26da8e, 0x6b99d65e, 0x4bc81609, 0x92cc50b1, 0x26780c1, 0x94ef6380, 0x7db8ef16, 0x645d0966, 0x4381ef12, 0xbdafc8c5, 0xe308acbe, 0x6dc41453, 0xa819426a, 0xa12d7baf, 0x341c5e96, 0xa75a9b72, 0xc5b0ac47, 0x9d13eff9, 0xf1529be5, 0x3e5d5380, 0x3d9dda94, 0x1bfef653, 0x2d9c54fa, 0x69151, 0xcde70583, 0x26f808a5, 0x6b576e98, 0xe11872ca, 0x75fa41ad, 0x644db9d4, 0x925f9a4e, 0x37ca5f6d, 0xd831be54, 0x16983247, 0x152e1115, 0xab1b669f, 0x52ec6133, 0xe8811c07, 0xa6bc242f, 0xd7cd79c6, 0xc996ecb0, 0xa4c93552, 0x4c1500, 0x441c4270, 0xe194fe5b, 0x933cc710, 0x2dd0a9ab, 0xf9ffebc1, 0xa16ecd48, 0x87e41cf8, 0xdf938adc, 0x72c86573, 0x4048d9, 0xc153bb24, 0xe17e72e1, 0x571ea498, 0x4ac2c4da, 0x19487674, 0xc7b20008, 0x8cccaa68, 0x9bad2e6d, 0x55aab78e, 0xc96d41ba, 0x8caddc3, 0xd261df60, 0x697f5439, 0xf779a9f9, 0xb80d2a44, 0xb5f41ca8, 0xc899686f, 0xadfe744a, 0xff773463, 0xd97db308, 0x69009f6f, 0xb51c542, 0xa8ab97dc, 0x16f2226c, 0x6124e111, 0x8c896fb5, 0x28f36d10, 0x5dd81907, 0x4edad9b, 0xc8a96059, 0x93377902, 0x8d533437, 0x96ca089a, 0x653801ed, 0x17a3c1aa, 0x7bc35ee1, 0xcc6834b9, 0x1fd0bdbf, 0xb4703ee1, 0x7f4604b4, 0xc9c7ad7e, 0x860768a3, 0xf13775, 0x2e9bee97, 0x1a7146b8, 0x5cfaf99b, 0x7333c207, 0x5c89a37c, 0xe86fe560, 0x6b9a3388, 0x34a399d4, 0xca14a127, 0xdc21b5c4, 0x8e11d6a2, 0x835cf3bd, 0x5d64aa2d, 0x271f8343, 0xe5edc005, 0x9d58593e, 0x3fcafae7, 0xd0d7c25e, 0xbd0edf91, 0xcc02baeb, 0x7676ee18, 0x5e897e5b, 0x36be744f, 0x1fc7970c, 0xf6626432, 0x5dafc52d, 0xe97a3bbf, 0x20f836db, 0xf4509e1, 0xc3d0d6cd, 0x9ec91899, 0xc66766c4, 0x92397b2f, 0x2250a903, 0xa5bf6402, 0xec650dc5, 0x4bdcd219, 0x593df9f5, 0xad5fdeb, 0xd629efbb, 0x690527d, 0x3eebde4e, 0xe2ad08d5, 0xb1d1a686, 0x258780e, 0xaec2cb19, 0xf5aaa967, 0xa035c0f0, 0x3172b750, 0x30760509, 0xe3d329f6, 0x473e668b, 0x76c741fc, 0xe0ee312b, 0x79f3e1e7, 0x99465284, 0xffa66938, 0x807da8ce, 0xdfbfa6c, 0x4e363083, 0x277822d, 0xffbce2d7, 0xf1ffdc9f, 0xbca74eb4, 0xc2915e0e, 0xd0d6a222, 0xabbaa1e0, 0xc0a87319, 0x3ba262a3, 0x5359d849, 0xfe899bc5, 0xfd003917, 0xdf22144e, 0x15a2a6d2, 0xf299bf65, 0x8e6a2269, 0x3b777f82, 0x2cd77588, 0x369d7f11, 0x8c009843, 0x8b03ac58, 0xe1a586fa, 0xd2032856, 0x1e796ebf, 0xddf9939a, 0x1e04a83e, 0xfc22a2cb, 0xf54b914e, 0xc02d4486, 0xe085a129, 0x3f6b5f22, 0xb7467ee0, 0x5d527980, 0x74479cbd, 0x8cf4ed90, 0x4cb99af9, 0xd71ead36, 0xf90e6f34, 0x3a41c196, 0x7a263ea, 0xc00e0afa, 0xb6b70efe, 0xaae52fde, 0x647d1547, 0x259b21f9, 0x8cc55dc6, 0x7b92f5ce, 0xc31a54a4, 0x61491033, 0xb6e2a681, 0x52118d9e, 0x32935717, 0x682cdc90, 0xc7e20ff4, 0x4f20352c, 0xc886db07, 0x7bb4691f, 0x54c6da3c, 0x57fc54d9, 0xf6984e5a, 0x8cf4ed90, 0xecf7ef23, 0xf9be0586, 0x2efc1660, 0x76a2304, 0xaf15e485, 0x74d451e8, 0xe2290244, 0x8cc6281a, 0x5fa6cf7a, 0x463ba3bc, 0x7fc1c80f, 0xb92cf5f1, 0xb813ff29, 0x9fe05b5c, 0xf4f423de, 0xee8d8c82, 0xc6a87b1c, 0x553adee4, 0x4d18dbf3, 0x8f8c9156, 0xe7a50229, 0xbb46ff3d, 0x939e6787, 0xb7d581da, 0xa1484f27, 0xb70c335a, 0x42166850, 0xf7df1e72, 0xe5bc2746, 0x4887e01e, 0xfd7a1ec9, 0x2368071b, 0x8e4d97d2, 0x4d725007, 0x84a6d1e3, 0x17cc9ef9, 0x102f9cc6, 0x60a128bf, 0xe51efe74, 0x9b0ff32, 0xa4dcc014, 0x609a1d65, 0xe41322e5, 0x614e78f3, 0xd3931353, 0x7b6f8ad9, 0x6479738d, 0xe187ec3e, 0x9613a587, 0x28b9311, 0x9a57d419, 0x307e1769, 0x145095ba, 0x53cce6b7, 0x92770185, 0x2f43e9b7, 0xa1f00dae, 0x568611fd, 0x6a1b9495, 0x6c36775a, 0xafe84e9e, 0x48dd87b2];

			function ub98484234(pa7abae98165fa7790, pa7abae98165fa7791, pa7abae98165fa7792) {
				var rk = [24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10, 24, 19, 26, 23, 24, 15, 36, 26, 10];
				var k2 = [0x4f81dd35, 0x49a728c5];
				var lk = [0x4f81dd35, 0x49a728c5];
				var v = pa7abae98165fa779.slice(0);
				var k = [0xbd7375f8, 0xdfcfb71b, 0x3f7fed8e, 0xf7bb9631];
				for(var O = 0; O < 468; O++) {
					v[O] ^= 0x2a203c7b;
				}
				v[1] += lk[1];
				v[0] -= lk[0];
				v[3] -= lk[1];
				v[2] = (v[2] >>> (lk[0] % 16)) | (v[2] << (32 - (lk[0] % 16)));
				v[5] += lk[1];
				v[4] = (v[4] >>> (lk[0] % 16)) | (v[4] << (32 - (lk[0] % 16)));
				v[7] = (v[7] >>> (lk[1] % 16)) | (v[7] << (32 - (lk[1] % 16)));
				v[6] = (v[6] << (lk[0] % 16)) | (v[6] >>> (32 - (lk[0] % 16)));
				v[9] += lk[1];
				v[8] = (v[8] >>> (lk[0] % 16)) | (v[8] << (32 - (lk[0] % 16)));
				v[11] = (v[11] << (lk[1] % 16)) | (v[11] >>> (32 - (lk[1] % 16)));
				v[10] += lk[0];
				v[13] = (v[13] >>> (lk[1] % 16)) | (v[13] << (32 - (lk[1] % 16)));
				v[12] = (v[12] >>> (lk[0] % 16)) | (v[12] << (32 - (lk[0] % 16)));
				v[15] = (v[15] >>> (lk[1] % 16)) | (v[15] << (32 - (lk[1] % 16)));
				v[14] = (v[14] >>> (lk[0] % 16)) | (v[14] << (32 - (lk[0] % 16)));
				v[17] -= lk[1];
				v[16] -= lk[0];
				v[19] += lk[1];
				v[18] -= lk[0];
				v[21] -= lk[1];
				v[20] = (v[20] >>> (lk[0] % 16)) | (v[20] << (32 - (lk[0] % 16)));
				v[23] += lk[1];
				v[22] = (v[22] >>> (lk[0] % 16)) | (v[22] << (32 - (lk[0] % 16)));
				v[25] = (v[25] >>> (lk[1] % 16)) | (v[25] << (32 - (lk[1] % 16)));
				v[24] = (v[24] << (lk[0] % 16)) | (v[24] >>> (32 - (lk[0] % 16)));
				v[27] += lk[1];
				v[26] = (v[26] >>> (lk[0] % 16)) | (v[26] << (32 - (lk[0] % 16)));
				v[29] = (v[29] << (lk[1] % 16)) | (v[29] >>> (32 - (lk[1] % 16)));
				v[28] += lk[0];
				v[31] = (v[31] >>> (lk[1] % 16)) | (v[31] << (32 - (lk[1] % 16)));
				v[30] = (v[30] >>> (lk[0] % 16)) | (v[30] << (32 - (lk[0] % 16)));
				v[33] = (v[33] >>> (lk[1] % 16)) | (v[33] << (32 - (lk[1] % 16)));
				v[32] = (v[32] >>> (lk[0] % 16)) | (v[32] << (32 - (lk[0] % 16)));
				v[35] -= lk[1];
				v[34] -= lk[0];
				v[37] += lk[1];
				v[36] -= lk[0];
				v[39] -= lk[1];
				v[38] = (v[38] >>> (lk[0] % 16)) | (v[38] << (32 - (lk[0] % 16)));
				v[41] += lk[1];
				v[40] = (v[40] >>> (lk[0] % 16)) | (v[40] << (32 - (lk[0] % 16)));
				v[43] = (v[43] >>> (lk[1] % 16)) | (v[43] << (32 - (lk[1] % 16)));
				v[42] = (v[42] << (lk[0] % 16)) | (v[42] >>> (32 - (lk[0] % 16)));
				v[45] += lk[1];
				v[44] = (v[44] >>> (lk[0] % 16)) | (v[44] << (32 - (lk[0] % 16)));
				v[47] = (v[47] << (lk[1] % 16)) | (v[47] >>> (32 - (lk[1] % 16)));
				v[46] += lk[0];
				v[49] = (v[49] >>> (lk[1] % 16)) | (v[49] << (32 - (lk[1] % 16)));
				v[48] = (v[48] >>> (lk[0] % 16)) | (v[48] << (32 - (lk[0] % 16)));
				v[51] = (v[51] >>> (lk[1] % 16)) | (v[51] << (32 - (lk[1] % 16)));
				v[50] = (v[50] >>> (lk[0] % 16)) | (v[50] << (32 - (lk[0] % 16)));
				v[53] -= lk[1];
				v[52] -= lk[0];
				v[55] += lk[1];
				v[54] -= lk[0];
				v[57] -= lk[1];
				v[56] = (v[56] >>> (lk[0] % 16)) | (v[56] << (32 - (lk[0] % 16)));
				v[59] += lk[1];
				v[58] = (v[58] >>> (lk[0] % 16)) | (v[58] << (32 - (lk[0] % 16)));
				v[61] = (v[61] >>> (lk[1] % 16)) | (v[61] << (32 - (lk[1] % 16)));
				v[60] = (v[60] << (lk[0] % 16)) | (v[60] >>> (32 - (lk[0] % 16)));
				v[63] += lk[1];
				v[62] = (v[62] >>> (lk[0] % 16)) | (v[62] << (32 - (lk[0] % 16)));
				v[65] = (v[65] << (lk[1] % 16)) | (v[65] >>> (32 - (lk[1] % 16)));
				v[64] += lk[0];
				v[67] = (v[67] >>> (lk[1] % 16)) | (v[67] << (32 - (lk[1] % 16)));
				v[66] = (v[66] >>> (lk[0] % 16)) | (v[66] << (32 - (lk[0] % 16)));
				v[69] = (v[69] >>> (lk[1] % 16)) | (v[69] << (32 - (lk[1] % 16)));
				v[68] = (v[68] >>> (lk[0] % 16)) | (v[68] << (32 - (lk[0] % 16)));
				v[71] -= lk[1];
				v[70] -= lk[0];
				v[73] += lk[1];
				v[72] -= lk[0];
				v[75] -= lk[1];
				v[74] = (v[74] >>> (lk[0] % 16)) | (v[74] << (32 - (lk[0] % 16)));
				v[77] += lk[1];
				v[76] = (v[76] >>> (lk[0] % 16)) | (v[76] << (32 - (lk[0] % 16)));
				v[79] = (v[79] >>> (lk[1] % 16)) | (v[79] << (32 - (lk[1] % 16)));
				v[78] = (v[78] << (lk[0] % 16)) | (v[78] >>> (32 - (lk[0] % 16)));
				v[81] += lk[1];
				v[80] = (v[80] >>> (lk[0] % 16)) | (v[80] << (32 - (lk[0] % 16)));
				v[83] = (v[83] << (lk[1] % 16)) | (v[83] >>> (32 - (lk[1] % 16)));
				v[82] += lk[0];
				v[85] = (v[85] >>> (lk[1] % 16)) | (v[85] << (32 - (lk[1] % 16)));
				v[84] = (v[84] >>> (lk[0] % 16)) | (v[84] << (32 - (lk[0] % 16)));
				v[87] = (v[87] >>> (lk[1] % 16)) | (v[87] << (32 - (lk[1] % 16)));
				v[86] = (v[86] >>> (lk[0] % 16)) | (v[86] << (32 - (lk[0] % 16)));
				v[89] -= lk[1];
				v[88] -= lk[0];
				v[91] += lk[1];
				v[90] -= lk[0];
				v[93] -= lk[1];
				v[92] = (v[92] >>> (lk[0] % 16)) | (v[92] << (32 - (lk[0] % 16)));
				v[95] += lk[1];
				v[94] = (v[94] >>> (lk[0] % 16)) | (v[94] << (32 - (lk[0] % 16)));
				v[97] = (v[97] >>> (lk[1] % 16)) | (v[97] << (32 - (lk[1] % 16)));
				v[96] = (v[96] << (lk[0] % 16)) | (v[96] >>> (32 - (lk[0] % 16)));
				v[99] += lk[1];
				v[98] = (v[98] >>> (lk[0] % 16)) | (v[98] << (32 - (lk[0] % 16)));
				v[101] = (v[101] << (lk[1] % 16)) | (v[101] >>> (32 - (lk[1] % 16)));
				v[100] += lk[0];
				v[103] = (v[103] >>> (lk[1] % 16)) | (v[103] << (32 - (lk[1] % 16)));
				v[102] = (v[102] >>> (lk[0] % 16)) | (v[102] << (32 - (lk[0] % 16)));
				v[105] = (v[105] >>> (lk[1] % 16)) | (v[105] << (32 - (lk[1] % 16)));
				v[104] = (v[104] >>> (lk[0] % 16)) | (v[104] << (32 - (lk[0] % 16)));
				v[107] -= lk[1];
				v[106] -= lk[0];
				v[109] += lk[1];
				v[108] -= lk[0];
				v[111] -= lk[1];
				v[110] = (v[110] >>> (lk[0] % 16)) | (v[110] << (32 - (lk[0] % 16)));
				v[113] += lk[1];
				v[112] = (v[112] >>> (lk[0] % 16)) | (v[112] << (32 - (lk[0] % 16)));
				v[115] = (v[115] >>> (lk[1] % 16)) | (v[115] << (32 - (lk[1] % 16)));
				v[114] = (v[114] << (lk[0] % 16)) | (v[114] >>> (32 - (lk[0] % 16)));
				v[117] += lk[1];
				v[116] = (v[116] >>> (lk[0] % 16)) | (v[116] << (32 - (lk[0] % 16)));
				v[119] = (v[119] << (lk[1] % 16)) | (v[119] >>> (32 - (lk[1] % 16)));
				v[118] += lk[0];
				v[121] = (v[121] >>> (lk[1] % 16)) | (v[121] << (32 - (lk[1] % 16)));
				v[120] = (v[120] >>> (lk[0] % 16)) | (v[120] << (32 - (lk[0] % 16)));
				v[123] = (v[123] >>> (lk[1] % 16)) | (v[123] << (32 - (lk[1] % 16)));
				v[122] = (v[122] >>> (lk[0] % 16)) | (v[122] << (32 - (lk[0] % 16)));
				v[125] -= lk[1];
				v[124] -= lk[0];
				v[127] += lk[1];
				v[126] -= lk[0];
				v[129] -= lk[1];
				v[128] = (v[128] >>> (lk[0] % 16)) | (v[128] << (32 - (lk[0] % 16)));
				v[131] += lk[1];
				v[130] = (v[130] >>> (lk[0] % 16)) | (v[130] << (32 - (lk[0] % 16)));
				v[133] = (v[133] >>> (lk[1] % 16)) | (v[133] << (32 - (lk[1] % 16)));
				v[132] = (v[132] << (lk[0] % 16)) | (v[132] >>> (32 - (lk[0] % 16)));
				v[135] += lk[1];
				v[134] = (v[134] >>> (lk[0] % 16)) | (v[134] << (32 - (lk[0] % 16)));
				v[137] = (v[137] << (lk[1] % 16)) | (v[137] >>> (32 - (lk[1] % 16)));
				v[136] += lk[0];
				v[139] = (v[139] >>> (lk[1] % 16)) | (v[139] << (32 - (lk[1] % 16)));
				v[138] = (v[138] >>> (lk[0] % 16)) | (v[138] << (32 - (lk[0] % 16)));
				v[141] = (v[141] >>> (lk[1] % 16)) | (v[141] << (32 - (lk[1] % 16)));
				v[140] = (v[140] >>> (lk[0] % 16)) | (v[140] << (32 - (lk[0] % 16)));
				v[143] -= lk[1];
				v[142] -= lk[0];
				v[145] += lk[1];
				v[144] -= lk[0];
				v[147] -= lk[1];
				v[146] = (v[146] >>> (lk[0] % 16)) | (v[146] << (32 - (lk[0] % 16)));
				v[149] += lk[1];
				v[148] = (v[148] >>> (lk[0] % 16)) | (v[148] << (32 - (lk[0] % 16)));
				v[151] = (v[151] >>> (lk[1] % 16)) | (v[151] << (32 - (lk[1] % 16)));
				v[150] = (v[150] << (lk[0] % 16)) | (v[150] >>> (32 - (lk[0] % 16)));
				v[153] += lk[1];
				v[152] = (v[152] >>> (lk[0] % 16)) | (v[152] << (32 - (lk[0] % 16)));
				v[155] = (v[155] << (lk[1] % 16)) | (v[155] >>> (32 - (lk[1] % 16)));
				v[154] += lk[0];
				v[157] = (v[157] >>> (lk[1] % 16)) | (v[157] << (32 - (lk[1] % 16)));
				v[156] = (v[156] >>> (lk[0] % 16)) | (v[156] << (32 - (lk[0] % 16)));
				v[159] = (v[159] >>> (lk[1] % 16)) | (v[159] << (32 - (lk[1] % 16)));
				v[158] = (v[158] >>> (lk[0] % 16)) | (v[158] << (32 - (lk[0] % 16)));
				v[161] -= lk[1];
				v[160] -= lk[0];
				v[163] += lk[1];
				v[162] -= lk[0];
				v[165] -= lk[1];
				v[164] = (v[164] >>> (lk[0] % 16)) | (v[164] << (32 - (lk[0] % 16)));
				v[167] += lk[1];
				v[166] = (v[166] >>> (lk[0] % 16)) | (v[166] << (32 - (lk[0] % 16)));
				v[169] = (v[169] >>> (lk[1] % 16)) | (v[169] << (32 - (lk[1] % 16)));
				v[168] = (v[168] << (lk[0] % 16)) | (v[168] >>> (32 - (lk[0] % 16)));
				v[171] += lk[1];
				v[170] = (v[170] >>> (lk[0] % 16)) | (v[170] << (32 - (lk[0] % 16)));
				v[173] = (v[173] << (lk[1] % 16)) | (v[173] >>> (32 - (lk[1] % 16)));
				v[172] += lk[0];
				v[175] = (v[175] >>> (lk[1] % 16)) | (v[175] << (32 - (lk[1] % 16)));
				v[174] = (v[174] >>> (lk[0] % 16)) | (v[174] << (32 - (lk[0] % 16)));
				v[177] = (v[177] >>> (lk[1] % 16)) | (v[177] << (32 - (lk[1] % 16)));
				v[176] = (v[176] >>> (lk[0] % 16)) | (v[176] << (32 - (lk[0] % 16)));
				v[179] -= lk[1];
				v[178] -= lk[0];
				v[181] += lk[1];
				v[180] -= lk[0];
				v[183] -= lk[1];
				v[182] = (v[182] >>> (lk[0] % 16)) | (v[182] << (32 - (lk[0] % 16)));
				v[185] += lk[1];
				v[184] = (v[184] >>> (lk[0] % 16)) | (v[184] << (32 - (lk[0] % 16)));
				v[187] = (v[187] >>> (lk[1] % 16)) | (v[187] << (32 - (lk[1] % 16)));
				v[186] = (v[186] << (lk[0] % 16)) | (v[186] >>> (32 - (lk[0] % 16)));
				v[189] += lk[1];
				v[188] = (v[188] >>> (lk[0] % 16)) | (v[188] << (32 - (lk[0] % 16)));
				v[191] = (v[191] << (lk[1] % 16)) | (v[191] >>> (32 - (lk[1] % 16)));
				v[190] += lk[0];
				v[193] = (v[193] >>> (lk[1] % 16)) | (v[193] << (32 - (lk[1] % 16)));
				v[192] = (v[192] >>> (lk[0] % 16)) | (v[192] << (32 - (lk[0] % 16)));
				v[195] = (v[195] >>> (lk[1] % 16)) | (v[195] << (32 - (lk[1] % 16)));
				v[194] = (v[194] >>> (lk[0] % 16)) | (v[194] << (32 - (lk[0] % 16)));
				v[197] -= lk[1];
				v[196] -= lk[0];
				v[199] += lk[1];
				v[198] -= lk[0];
				v[201] -= lk[1];
				v[200] = (v[200] >>> (lk[0] % 16)) | (v[200] << (32 - (lk[0] % 16)));
				v[203] += lk[1];
				v[202] = (v[202] >>> (lk[0] % 16)) | (v[202] << (32 - (lk[0] % 16)));
				v[205] = (v[205] >>> (lk[1] % 16)) | (v[205] << (32 - (lk[1] % 16)));
				v[204] = (v[204] << (lk[0] % 16)) | (v[204] >>> (32 - (lk[0] % 16)));
				v[207] += lk[1];
				v[206] = (v[206] >>> (lk[0] % 16)) | (v[206] << (32 - (lk[0] % 16)));
				v[209] = (v[209] << (lk[1] % 16)) | (v[209] >>> (32 - (lk[1] % 16)));
				v[208] += lk[0];
				v[211] = (v[211] >>> (lk[1] % 16)) | (v[211] << (32 - (lk[1] % 16)));
				v[210] = (v[210] >>> (lk[0] % 16)) | (v[210] << (32 - (lk[0] % 16)));
				v[213] = (v[213] >>> (lk[1] % 16)) | (v[213] << (32 - (lk[1] % 16)));
				v[212] = (v[212] >>> (lk[0] % 16)) | (v[212] << (32 - (lk[0] % 16)));
				v[215] -= lk[1];
				v[214] -= lk[0];
				v[217] += lk[1];
				v[216] -= lk[0];
				v[219] -= lk[1];
				v[218] = (v[218] >>> (lk[0] % 16)) | (v[218] << (32 - (lk[0] % 16)));
				v[221] += lk[1];
				v[220] = (v[220] >>> (lk[0] % 16)) | (v[220] << (32 - (lk[0] % 16)));
				v[223] = (v[223] >>> (lk[1] % 16)) | (v[223] << (32 - (lk[1] % 16)));
				v[222] = (v[222] << (lk[0] % 16)) | (v[222] >>> (32 - (lk[0] % 16)));
				v[225] += lk[1];
				v[224] = (v[224] >>> (lk[0] % 16)) | (v[224] << (32 - (lk[0] % 16)));
				v[227] = (v[227] << (lk[1] % 16)) | (v[227] >>> (32 - (lk[1] % 16)));
				v[226] += lk[0];
				v[229] = (v[229] >>> (lk[1] % 16)) | (v[229] << (32 - (lk[1] % 16)));
				v[228] = (v[228] >>> (lk[0] % 16)) | (v[228] << (32 - (lk[0] % 16)));
				v[231] = (v[231] >>> (lk[1] % 16)) | (v[231] << (32 - (lk[1] % 16)));
				v[230] = (v[230] >>> (lk[0] % 16)) | (v[230] << (32 - (lk[0] % 16)));
				v[233] -= lk[1];
				v[232] -= lk[0];
				v[235] += lk[1];
				v[234] -= lk[0];
				v[237] -= lk[1];
				v[236] = (v[236] >>> (lk[0] % 16)) | (v[236] << (32 - (lk[0] % 16)));
				v[239] += lk[1];
				v[238] = (v[238] >>> (lk[0] % 16)) | (v[238] << (32 - (lk[0] % 16)));
				v[241] = (v[241] >>> (lk[1] % 16)) | (v[241] << (32 - (lk[1] % 16)));
				v[240] = (v[240] << (lk[0] % 16)) | (v[240] >>> (32 - (lk[0] % 16)));
				v[243] += lk[1];
				v[242] = (v[242] >>> (lk[0] % 16)) | (v[242] << (32 - (lk[0] % 16)));
				v[245] = (v[245] << (lk[1] % 16)) | (v[245] >>> (32 - (lk[1] % 16)));
				v[244] += lk[0];
				v[247] = (v[247] >>> (lk[1] % 16)) | (v[247] << (32 - (lk[1] % 16)));
				v[246] = (v[246] >>> (lk[0] % 16)) | (v[246] << (32 - (lk[0] % 16)));
				v[249] = (v[249] >>> (lk[1] % 16)) | (v[249] << (32 - (lk[1] % 16)));
				v[248] = (v[248] >>> (lk[0] % 16)) | (v[248] << (32 - (lk[0] % 16)));
				v[251] -= lk[1];
				v[250] -= lk[0];
				v[253] += lk[1];
				v[252] -= lk[0];
				v[255] -= lk[1];
				v[254] = (v[254] >>> (lk[0] % 16)) | (v[254] << (32 - (lk[0] % 16)));
				v[257] += lk[1];
				v[256] = (v[256] >>> (lk[0] % 16)) | (v[256] << (32 - (lk[0] % 16)));
				v[259] = (v[259] >>> (lk[1] % 16)) | (v[259] << (32 - (lk[1] % 16)));
				v[258] = (v[258] << (lk[0] % 16)) | (v[258] >>> (32 - (lk[0] % 16)));
				v[261] += lk[1];
				v[260] = (v[260] >>> (lk[0] % 16)) | (v[260] << (32 - (lk[0] % 16)));
				v[263] = (v[263] << (lk[1] % 16)) | (v[263] >>> (32 - (lk[1] % 16)));
				v[262] += lk[0];
				v[265] = (v[265] >>> (lk[1] % 16)) | (v[265] << (32 - (lk[1] % 16)));
				v[264] = (v[264] >>> (lk[0] % 16)) | (v[264] << (32 - (lk[0] % 16)));
				v[267] = (v[267] >>> (lk[1] % 16)) | (v[267] << (32 - (lk[1] % 16)));
				v[266] = (v[266] >>> (lk[0] % 16)) | (v[266] << (32 - (lk[0] % 16)));
				v[269] -= lk[1];
				v[268] -= lk[0];
				v[271] += lk[1];
				v[270] -= lk[0];
				v[273] -= lk[1];
				v[272] = (v[272] >>> (lk[0] % 16)) | (v[272] << (32 - (lk[0] % 16)));
				v[275] += lk[1];
				v[274] = (v[274] >>> (lk[0] % 16)) | (v[274] << (32 - (lk[0] % 16)));
				v[277] = (v[277] >>> (lk[1] % 16)) | (v[277] << (32 - (lk[1] % 16)));
				v[276] = (v[276] << (lk[0] % 16)) | (v[276] >>> (32 - (lk[0] % 16)));
				v[279] += lk[1];
				v[278] = (v[278] >>> (lk[0] % 16)) | (v[278] << (32 - (lk[0] % 16)));
				v[281] = (v[281] << (lk[1] % 16)) | (v[281] >>> (32 - (lk[1] % 16)));
				v[280] += lk[0];
				v[283] = (v[283] >>> (lk[1] % 16)) | (v[283] << (32 - (lk[1] % 16)));
				v[282] = (v[282] >>> (lk[0] % 16)) | (v[282] << (32 - (lk[0] % 16)));
				v[285] = (v[285] >>> (lk[1] % 16)) | (v[285] << (32 - (lk[1] % 16)));
				v[284] = (v[284] >>> (lk[0] % 16)) | (v[284] << (32 - (lk[0] % 16)));
				v[287] -= lk[1];
				v[286] -= lk[0];
				v[289] += lk[1];
				v[288] -= lk[0];
				v[291] -= lk[1];
				v[290] = (v[290] >>> (lk[0] % 16)) | (v[290] << (32 - (lk[0] % 16)));
				v[293] += lk[1];
				v[292] = (v[292] >>> (lk[0] % 16)) | (v[292] << (32 - (lk[0] % 16)));
				v[295] = (v[295] >>> (lk[1] % 16)) | (v[295] << (32 - (lk[1] % 16)));
				v[294] = (v[294] << (lk[0] % 16)) | (v[294] >>> (32 - (lk[0] % 16)));
				v[297] += lk[1];
				v[296] = (v[296] >>> (lk[0] % 16)) | (v[296] << (32 - (lk[0] % 16)));
				v[299] = (v[299] << (lk[1] % 16)) | (v[299] >>> (32 - (lk[1] % 16)));
				v[298] += lk[0];
				v[301] = (v[301] >>> (lk[1] % 16)) | (v[301] << (32 - (lk[1] % 16)));
				v[300] = (v[300] >>> (lk[0] % 16)) | (v[300] << (32 - (lk[0] % 16)));
				v[303] = (v[303] >>> (lk[1] % 16)) | (v[303] << (32 - (lk[1] % 16)));
				v[302] = (v[302] >>> (lk[0] % 16)) | (v[302] << (32 - (lk[0] % 16)));
				v[305] -= lk[1];
				v[304] -= lk[0];
				v[307] += lk[1];
				v[306] -= lk[0];
				v[309] -= lk[1];
				v[308] = (v[308] >>> (lk[0] % 16)) | (v[308] << (32 - (lk[0] % 16)));
				v[311] += lk[1];
				v[310] = (v[310] >>> (lk[0] % 16)) | (v[310] << (32 - (lk[0] % 16)));
				v[313] = (v[313] >>> (lk[1] % 16)) | (v[313] << (32 - (lk[1] % 16)));
				v[312] = (v[312] << (lk[0] % 16)) | (v[312] >>> (32 - (lk[0] % 16)));
				v[315] += lk[1];
				v[314] = (v[314] >>> (lk[0] % 16)) | (v[314] << (32 - (lk[0] % 16)));
				v[317] = (v[317] << (lk[1] % 16)) | (v[317] >>> (32 - (lk[1] % 16)));
				v[316] += lk[0];
				v[319] = (v[319] >>> (lk[1] % 16)) | (v[319] << (32 - (lk[1] % 16)));
				v[318] = (v[318] >>> (lk[0] % 16)) | (v[318] << (32 - (lk[0] % 16)));
				v[321] = (v[321] >>> (lk[1] % 16)) | (v[321] << (32 - (lk[1] % 16)));
				v[320] = (v[320] >>> (lk[0] % 16)) | (v[320] << (32 - (lk[0] % 16)));
				v[323] -= lk[1];
				v[322] -= lk[0];
				v[325] += lk[1];
				v[324] -= lk[0];
				v[327] -= lk[1];
				v[326] = (v[326] >>> (lk[0] % 16)) | (v[326] << (32 - (lk[0] % 16)));
				v[329] += lk[1];
				v[328] = (v[328] >>> (lk[0] % 16)) | (v[328] << (32 - (lk[0] % 16)));
				v[331] = (v[331] >>> (lk[1] % 16)) | (v[331] << (32 - (lk[1] % 16)));
				v[330] = (v[330] << (lk[0] % 16)) | (v[330] >>> (32 - (lk[0] % 16)));
				v[333] += lk[1];
				v[332] = (v[332] >>> (lk[0] % 16)) | (v[332] << (32 - (lk[0] % 16)));
				v[335] = (v[335] << (lk[1] % 16)) | (v[335] >>> (32 - (lk[1] % 16)));
				v[334] += lk[0];
				v[337] = (v[337] >>> (lk[1] % 16)) | (v[337] << (32 - (lk[1] % 16)));
				v[336] = (v[336] >>> (lk[0] % 16)) | (v[336] << (32 - (lk[0] % 16)));
				v[339] = (v[339] >>> (lk[1] % 16)) | (v[339] << (32 - (lk[1] % 16)));
				v[338] = (v[338] >>> (lk[0] % 16)) | (v[338] << (32 - (lk[0] % 16)));
				v[341] -= lk[1];
				v[340] -= lk[0];
				v[343] += lk[1];
				v[342] -= lk[0];
				v[345] -= lk[1];
				v[344] = (v[344] >>> (lk[0] % 16)) | (v[344] << (32 - (lk[0] % 16)));
				v[347] += lk[1];
				v[346] = (v[346] >>> (lk[0] % 16)) | (v[346] << (32 - (lk[0] % 16)));
				v[349] = (v[349] >>> (lk[1] % 16)) | (v[349] << (32 - (lk[1] % 16)));
				v[348] = (v[348] << (lk[0] % 16)) | (v[348] >>> (32 - (lk[0] % 16)));
				v[351] += lk[1];
				v[350] = (v[350] >>> (lk[0] % 16)) | (v[350] << (32 - (lk[0] % 16)));
				v[353] = (v[353] << (lk[1] % 16)) | (v[353] >>> (32 - (lk[1] % 16)));
				v[352] += lk[0];
				v[355] = (v[355] >>> (lk[1] % 16)) | (v[355] << (32 - (lk[1] % 16)));
				v[354] = (v[354] >>> (lk[0] % 16)) | (v[354] << (32 - (lk[0] % 16)));
				v[357] = (v[357] >>> (lk[1] % 16)) | (v[357] << (32 - (lk[1] % 16)));
				v[356] = (v[356] >>> (lk[0] % 16)) | (v[356] << (32 - (lk[0] % 16)));
				v[359] -= lk[1];
				v[358] -= lk[0];
				v[361] += lk[1];
				v[360] -= lk[0];
				v[363] -= lk[1];
				v[362] = (v[362] >>> (lk[0] % 16)) | (v[362] << (32 - (lk[0] % 16)));
				v[365] += lk[1];
				v[364] = (v[364] >>> (lk[0] % 16)) | (v[364] << (32 - (lk[0] % 16)));
				v[367] = (v[367] >>> (lk[1] % 16)) | (v[367] << (32 - (lk[1] % 16)));
				v[366] = (v[366] << (lk[0] % 16)) | (v[366] >>> (32 - (lk[0] % 16)));
				v[369] += lk[1];
				v[368] = (v[368] >>> (lk[0] % 16)) | (v[368] << (32 - (lk[0] % 16)));
				v[371] = (v[371] << (lk[1] % 16)) | (v[371] >>> (32 - (lk[1] % 16)));
				v[370] += lk[0];
				v[373] = (v[373] >>> (lk[1] % 16)) | (v[373] << (32 - (lk[1] % 16)));
				v[372] = (v[372] >>> (lk[0] % 16)) | (v[372] << (32 - (lk[0] % 16)));
				v[375] = (v[375] >>> (lk[1] % 16)) | (v[375] << (32 - (lk[1] % 16)));
				v[374] = (v[374] >>> (lk[0] % 16)) | (v[374] << (32 - (lk[0] % 16)));
				v[377] -= lk[1];
				v[376] -= lk[0];
				v[379] += lk[1];
				v[378] -= lk[0];
				v[381] -= lk[1];
				v[380] = (v[380] >>> (lk[0] % 16)) | (v[380] << (32 - (lk[0] % 16)));
				v[383] += lk[1];
				v[382] = (v[382] >>> (lk[0] % 16)) | (v[382] << (32 - (lk[0] % 16)));
				v[385] = (v[385] >>> (lk[1] % 16)) | (v[385] << (32 - (lk[1] % 16)));
				v[384] = (v[384] << (lk[0] % 16)) | (v[384] >>> (32 - (lk[0] % 16)));
				v[387] += lk[1];
				v[386] = (v[386] >>> (lk[0] % 16)) | (v[386] << (32 - (lk[0] % 16)));
				v[389] = (v[389] << (lk[1] % 16)) | (v[389] >>> (32 - (lk[1] % 16)));
				v[388] += lk[0];
				v[391] = (v[391] >>> (lk[1] % 16)) | (v[391] << (32 - (lk[1] % 16)));
				v[390] = (v[390] >>> (lk[0] % 16)) | (v[390] << (32 - (lk[0] % 16)));
				v[393] = (v[393] >>> (lk[1] % 16)) | (v[393] << (32 - (lk[1] % 16)));
				v[392] = (v[392] >>> (lk[0] % 16)) | (v[392] << (32 - (lk[0] % 16)));
				v[395] -= lk[1];
				v[394] -= lk[0];
				v[397] += lk[1];
				v[396] -= lk[0];
				v[399] -= lk[1];
				v[398] = (v[398] >>> (lk[0] % 16)) | (v[398] << (32 - (lk[0] % 16)));
				v[401] += lk[1];
				v[400] = (v[400] >>> (lk[0] % 16)) | (v[400] << (32 - (lk[0] % 16)));
				v[403] = (v[403] >>> (lk[1] % 16)) | (v[403] << (32 - (lk[1] % 16)));
				v[402] = (v[402] << (lk[0] % 16)) | (v[402] >>> (32 - (lk[0] % 16)));
				v[405] += lk[1];
				v[404] = (v[404] >>> (lk[0] % 16)) | (v[404] << (32 - (lk[0] % 16)));
				v[407] = (v[407] << (lk[1] % 16)) | (v[407] >>> (32 - (lk[1] % 16)));
				v[406] += lk[0];
				v[409] = (v[409] >>> (lk[1] % 16)) | (v[409] << (32 - (lk[1] % 16)));
				v[408] = (v[408] >>> (lk[0] % 16)) | (v[408] << (32 - (lk[0] % 16)));
				v[411] = (v[411] >>> (lk[1] % 16)) | (v[411] << (32 - (lk[1] % 16)));
				v[410] = (v[410] >>> (lk[0] % 16)) | (v[410] << (32 - (lk[0] % 16)));
				v[413] -= lk[1];
				v[412] -= lk[0];
				v[415] += lk[1];
				v[414] -= lk[0];
				v[417] -= lk[1];
				v[416] = (v[416] >>> (lk[0] % 16)) | (v[416] << (32 - (lk[0] % 16)));
				v[419] += lk[1];
				v[418] = (v[418] >>> (lk[0] % 16)) | (v[418] << (32 - (lk[0] % 16)));
				v[421] = (v[421] >>> (lk[1] % 16)) | (v[421] << (32 - (lk[1] % 16)));
				v[420] = (v[420] << (lk[0] % 16)) | (v[420] >>> (32 - (lk[0] % 16)));
				v[423] += lk[1];
				v[422] = (v[422] >>> (lk[0] % 16)) | (v[422] << (32 - (lk[0] % 16)));
				v[425] = (v[425] << (lk[1] % 16)) | (v[425] >>> (32 - (lk[1] % 16)));
				v[424] += lk[0];
				v[427] = (v[427] >>> (lk[1] % 16)) | (v[427] << (32 - (lk[1] % 16)));
				v[426] = (v[426] >>> (lk[0] % 16)) | (v[426] << (32 - (lk[0] % 16)));
				v[429] = (v[429] >>> (lk[1] % 16)) | (v[429] << (32 - (lk[1] % 16)));
				v[428] = (v[428] >>> (lk[0] % 16)) | (v[428] << (32 - (lk[0] % 16)));
				v[431] -= lk[1];
				v[430] -= lk[0];
				v[433] += lk[1];
				v[432] -= lk[0];
				v[435] -= lk[1];
				v[434] = (v[434] >>> (lk[0] % 16)) | (v[434] << (32 - (lk[0] % 16)));
				v[437] += lk[1];
				v[436] = (v[436] >>> (lk[0] % 16)) | (v[436] << (32 - (lk[0] % 16)));
				v[439] = (v[439] >>> (lk[1] % 16)) | (v[439] << (32 - (lk[1] % 16)));
				v[438] = (v[438] << (lk[0] % 16)) | (v[438] >>> (32 - (lk[0] % 16)));
				v[441] += lk[1];
				v[440] = (v[440] >>> (lk[0] % 16)) | (v[440] << (32 - (lk[0] % 16)));
				v[443] = (v[443] << (lk[1] % 16)) | (v[443] >>> (32 - (lk[1] % 16)));
				v[442] += lk[0];
				v[445] = (v[445] >>> (lk[1] % 16)) | (v[445] << (32 - (lk[1] % 16)));
				v[444] = (v[444] >>> (lk[0] % 16)) | (v[444] << (32 - (lk[0] % 16)));
				v[447] = (v[447] >>> (lk[1] % 16)) | (v[447] << (32 - (lk[1] % 16)));
				v[446] = (v[446] >>> (lk[0] % 16)) | (v[446] << (32 - (lk[0] % 16)));
				v[449] -= lk[1];
				v[448] -= lk[0];
				v[451] += lk[1];
				v[450] -= lk[0];
				v[453] -= lk[1];
				v[452] = (v[452] >>> (lk[0] % 16)) | (v[452] << (32 - (lk[0] % 16)));
				v[455] += lk[1];
				v[454] = (v[454] >>> (lk[0] % 16)) | (v[454] << (32 - (lk[0] % 16)));
				v[457] = (v[457] >>> (lk[1] % 16)) | (v[457] << (32 - (lk[1] % 16)));
				v[456] = (v[456] << (lk[0] % 16)) | (v[456] >>> (32 - (lk[0] % 16)));
				v[459] += lk[1];
				v[458] = (v[458] >>> (lk[0] % 16)) | (v[458] << (32 - (lk[0] % 16)));
				v[461] = (v[461] << (lk[1] % 16)) | (v[461] >>> (32 - (lk[1] % 16)));
				v[460] += lk[0];
				v[463] = (v[463] >>> (lk[1] % 16)) | (v[463] << (32 - (lk[1] % 16)));
				v[462] = (v[462] >>> (lk[0] % 16)) | (v[462] << (32 - (lk[0] % 16)));
				v[465] = (v[465] >>> (lk[1] % 16)) | (v[465] << (32 - (lk[1] % 16)));
				v[464] = (v[464] >>> (lk[0] % 16)) | (v[464] << (32 - (lk[0] % 16)));
				v[467] -= lk[1];
				v[466] -= lk[0];
				for(var I = 0; I < 468; I += 2) {
					var i, v0 = v[I] ^ k2[0],
						v1 = v[I + 1] ^ k2[1],
						d = 0x9E3779B9,
						sum = d * rk[I / 2];
					for(i = 0; i < rk[I / 2]; i++) {
						v1 -= (((v0 << 4) ^ (v0 >>> 5)) + v0) ^ (sum + k[(sum >>> 11) & 3]);
						sum -= d;
						v0 -= (((v1 << 4) ^ (v1 >>> 5)) + v1) ^ (sum + k[sum & 3]);
					}
					v[I] = v0 ^ k2[1];
					v[I + 1] = v1 ^ k2[0];
				}
				for(var O = 467; O > 0; O--) {
					v[O] ^= v[O - 1];
				}
				v[0] ^= 0x2a203c7b;
				var strc = "";
				for(var i = 0; i < v.length; i++) {
					strc += String.fromCharCode(v[i] & 0xff, v[i] >>> 8 & 0xff, v[i] >>> 16 & 0xff, v[i] >>> 24 & 0xff);
				}
				return eval(strc)(pa7abae98165fa7790, pa7abae98165fa7791, pa7abae98165fa7792);
			};
